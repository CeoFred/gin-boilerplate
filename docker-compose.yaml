version: "3.8"

services:

  postgres-db:
    container_name: postgres-db
    image: postgres:16-bookworm
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: on-failure
    env_file: .env
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - postgresql:/data/postgresql
      - ./files/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./files/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - APPNet
  
  swagger-docs:
    image: swaggerapi/swagger-ui
    container_name: swagger-docs
    restart: on-failure
    volumes:
      - ./docs/swagger.json:/docs/swagger.json
    environment:
      SWAGGER_JSON: /docs/swagger.json
    ports:
      - "6098:8080"
    networks:
      - APPNet
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  api:
    image: cosmtrek/air
    container_name: api
    restart: on-failure
    env_file: 
      - .env
    ports:
      -  '${PORT}:${PORT}'
    volumes:
      - '../gin-boilerplate:/gin-boilerplate'
      - '~/.ssh/id_rsa:/root/.ssh/id_rsa'
      - '~/.ssh/known_hosts:/root/.ssh/known_hosts'
      - '~/.gitconfig:/root/.gitconfig'
      - '../gin-boilerplate/docs:/gin-boilerplate/docs'
    working_dir: '/gin-boilerplate'
    networks:
      - APPNet

networks:
  APPNet:
    driver: bridge

volumes:
  postgresql: